"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const path_1 = require("path");
const file_1 = require("../file");
const template_1 = require("../template");
const head_1 = require("../head");
const CWD = process.cwd();
const build = async (dev, config) => {
    const [pages, layouts] = await Promise.all([file_1.getPages(), file_1.getLayouts()]);
    const layoutsWithPages = template_1.mergeLayoutsWithPages(pages, layouts);
    const htmlPages = await template_1.generateHTML(layoutsWithPages, { dev, config });
    return htmlPages;
};
exports.build = build;
const templateGenerator = async (filename) => {
    if (!filename) {
        console.log('\nNo file provided\n');
        return false;
    }
    console.time('build time');
    const file = await Promise.resolve().then(() => tslib_1.__importStar(require(path_1.normalize(`${CWD}/${filename}`))));
    const config = await file_1.getConfig();
    const data = Object.assign({}, file.data ? await file.data({ dev: false, config }) : {});
    await fs_extra_1.default.outputFile(filename.replace('.js', '.html'), await file.page({
        // @ts-ignore
        title: file.title,
        head: file.head ? await head_1.transformHeadToHTML({
            head: file.head, data, config, dev: false, route: {},
        }) : '',
        data,
    }));
    console.timeEnd('build time');
};
exports.templateGenerator = templateGenerator;
